eureka.client.serviceUrl.defaultZone=http://eureka:password@localhost:8761/eureka
spring.application.name=api-gateway

#Enhance display information for better view of what going on in the background
logging.level.root=INFO
logging.level.org.springframework.cloud.gateway.route.RouteDefinitionLocator=INFO
logging.level.org.springframework.cloud.gateway=TRACE

#in the route config below we give each routes an id, which is the name of that service
#also the uri, specifying the http url for the service. The lb signifies the load balance
#as the api gateway should check for available services that are up
#the predicate is like a notation or criteria that whenever we receive a request that has
#/api/product then we route it to the uri

## Product Service route
spring.cloud.gateway.routes[0].id=product-service
spring.cloud.gateway.routes[0].uri=lb://product-service
spring.cloud.gateway.routes[0].predicates[0]=Path=/api/product

## Order Service route
spring.cloud.gateway.routes[1].id=order-service
spring.cloud.gateway.routes[1].uri=lb://order-service
spring.cloud.gateway.routes[1].predicates[0]=Path=/api/order

# Access Eureka Server through the api gateway
## Discovery Server route
spring.cloud.gateway.routes[2].id=discovery-service
spring.cloud.gateway.routes[2].uri=http://localhost:8761
spring.cloud.gateway.routes[2].predicates[0]=Path=/eureka/web
spring.cloud.gateway.routes[2].filters[0]=SetPath=/

# the above config loads only the html view of the server and to load the static resource,
# we add the config below
## Discovery Service Static Resource route
spring.cloud.gateway.routes[3].id=discovery-server-static
spring.cloud.gateway.routes[3].uri=http://localhost:8761
spring.cloud.gateway.routes[3].predicates[0]=Path=/eureka/**


# http://localhost:8761/eureka/web
# whenever we make this request, we want the request to be routed to eureka server

# security config
spring.security.oauth2.resourceserver.jwt.issuer-uri=http://localhost:8181/realms/springboot-microservices-realm